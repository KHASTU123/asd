"use client"

import { useEffect, useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { CheckCircle, Calendar, TrendingUp, ArrowRight } from "lucide-react"
import Link from "next/link"

export function AssessmentComplete() {
  const [assessmentCount, setAssessmentCount] = useState<number | null>(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    async function fetchAssessments() {
      try {
        const res = await fetch("/api/assessments", { method: "GET" })
        if (!res.ok) throw new Error("Failed to fetch assessments")

        const data = await res.json()
        // v√≠ d·ª• API tr·∫£ v·ªÅ { count: 2 }
        setAssessmentCount(data.count)
      } catch (error) {
        console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu ƒë√°nh gi√°:", error)
        setAssessmentCount(0) // fallback
      } finally {
        setLoading(false)
      }
    }

    fetchAssessments()
  }, [])

  const canViewResults = (assessmentCount ?? 0) >= 3

  return (
    <div className="max-w-2xl mx-auto text-center space-y-8">
      <div className="flex justify-center">
        <div className="bg-green-100 dark:bg-green-900/20 p-4 rounded-full">
          <CheckCircle className="h-16 w-16 text-green-600" />
        </div>
      </div>

      <div>
        <h1 className="text-3xl font-bold text-foreground mb-4">
          Ho√†n th√†nh ƒë√°nh gi√°!
        </h1>
        <p className="text-xl text-muted-foreground">
          C·∫£m ∆°n b·∫°n ƒë√£ ho√†n th√†nh b√†i ƒë√°nh gi√° h√¥m nay. D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u v√† s·∫Ω ƒë∆∞·ª£c ph√¢n t√≠ch b·ªüi h·ªá th·ªëng AI.
        </p>
      </div>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center justify-center space-x-2">
            <Calendar className="h-5 w-5" />
            <span>Ti·∫øn tr√¨nh c·ªßa b·∫°n</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="text-center space-y-4">
            {loading ? (
              <p className="text-muted-foreground">ƒêang t·∫£i d·ªØ li·ªáu...</p>
            ) : (
              <>
                <div className="text-4xl font-bold text-primary">
                  {assessmentCount}/3
                </div>
                <p className="text-muted-foreground">Ng√†y ƒë√°nh gi√° ƒë√£ ho√†n th√†nh</p>

                {canViewResults ? (
                  <div className="bg-green-50 dark:bg-green-900/20 p-4 rounded-lg">
                    <p className="text-green-800 dark:text-green-200 font-medium mb-2">
                      üéâ B·∫°n ƒë√£ ƒë·ªß d·ªØ li·ªáu ƒë·ªÉ xem k·∫øt qu·∫£ ph√¢n t√≠ch AI!
                    </p>
                    <Link href="/dashboard/results">
                      <Button>
                        <TrendingUp className="mr-2 h-4 w-4" />
                        Xem k·∫øt qu·∫£ ph√¢n t√≠ch
                      </Button>
                    </Link>
                  </div>
                ) : (
                  <div className="bg-orange-50 dark:bg-orange-900/20 p-4 rounded-lg">
                    <p className="text-orange-800 dark:text-orange-200 font-medium">
                      C·∫ßn th√™m {3 - (assessmentCount ?? 0)} ng√†y ƒë√°nh gi√° ƒë·ªÉ c√≥ k·∫øt qu·∫£ ph√¢n t√≠ch ch√≠nh x√°c
                    </p>
                  </div>
                )}
              </>
            )}
          </div>
        </CardContent>
      </Card>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <Link href="/dashboard">
          <Button variant="outline" className="w-full bg-transparent">
            V·ªÅ trang ch·ªß
          </Button>
        </Link>
        <Link href="/dashboard/resources">
          <Button variant="outline" className="w-full bg-transparent">
            Xem t√†i nguy√™n h·ªó tr·ª£
            <ArrowRight className="ml-2 h-4 w-4" />
          </Button>
        </Link>
      </div>

      <Card className="text-left">
        <CardHeader>
          <CardTitle className="text-lg">L·ªùi nh·∫Øc quan tr·ªçng</CardTitle>
        </CardHeader>
        <CardContent>
          <ul className="text-sm text-muted-foreground space-y-2">
            <li>‚Ä¢ K·∫øt qu·∫£ ƒë√°nh gi√° ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o</li>
            <li>‚Ä¢ Kh√¥ng thay th·∫ø cho ch·∫©n ƒëo√°n y khoa chuy√™n nghi·ªáp</li>
            <li>‚Ä¢ H√£y ti·∫øp t·ª•c theo d√µi v√† ƒë√°nh gi√° h√†ng ng√†y</li>
            <li>‚Ä¢ Li√™n h·ªá b√°c sƒ© n·∫øu c√≥ b·∫•t k·ª≥ lo ng·∫°i n√†o</li>
          </ul>
        </CardContent>
      </Card>
    </div>
  )
}
